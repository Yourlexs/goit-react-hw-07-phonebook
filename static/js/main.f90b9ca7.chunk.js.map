{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","redux/contacts-selectors.js","redux/contacts-actions.js","redux/contacts-operations.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","getFilter","state","contacts","filter","getVisibleContacts","items","getContacts","normalizedFilter","toLowerCase","name","includes","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","dispatch","a","get","data","number","contact","post","then","catch","error","contactId","delete","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","currentTarget","type","value","onSubmit","preventDefault","map","alert","contactsOperations","className","style","label","pattern","title","required","onChange","input","button","Filter","styles","contactsActions","target","ContactList","useEffect","contactList","id","item","description","onClick","onDeleteTodo","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f90b9ca7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__26eNI\",\"input\":\"ContactForm_input__3D6-R\",\"button\":\"ContactForm_button__3gwag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1aDD6\",\"item\":\"ContactList_item__2qW5p\",\"description\":\"ContactList_description__2osxI\",\"button\":\"ContactList_button__1_5SI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3mxIN\",\"label\":\"Filter_label__3Oowa\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { createAction } from '@reduxjs/toolkit';\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\nimport contactsOperations from '../../redux/contacts-operations';\n\nimport style from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    if (e.currentTarget.type === 'text') {\n      setName(e.currentTarget.value);\n    }\n    if (e.currentTarget.type === 'tel') {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const arrayName = contacts.map(contact => {\n      return contact.name;\n    });\n\n    if (arrayName.includes(name)) {\n      alert(`${name} is already in contacts`);\n      setName('');\n      return;\n    }\n\n    dispatch(contactsOperations.addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={style.label}>\n        Name\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          className={style.input}\n        />\n      </label>\n      <label className={style.label}>\n        Number\n        <input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          className={style.input}\n        />\n      </label>\n      <button type=\"submit\" className={style.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { getFilter } from '../../redux/contacts-selectors';\n\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.label}>\n      Find by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n        className={styles.input}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts-selectors';\n\nimport styles from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const onDeleteTodo = id => dispatch(contactsOperations.deleteContact(id));\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.item}>\n          <p className={styles.description}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDeleteTodo(id)}\n            className={styles.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from './Components/ContactForm/';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\n\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}